- forme canonique

class Sample
{
	public:
		Sample(void) 				--> un constructeur par defaut
		Sample(Sample const & src)	--> constructeur par copie
		~Sample(void)				--> destructor

	Sample & operator=(Sample const & rhs); --> surcharge operator = (assignation)

	private:
		Sample(void) 				--> constructeur par default peut etre en private
}


--------------------------------------------------------------------------------

Integer & Integer::operator=(Integer const & rhs)
{
	this->_n = rhs.getValue();
	return (*this); --> this est un pointeur sur instance courante, on 
						le dereferenc pour ne pas avoir un pointeur
}
